SET @dbname = DATABASE();
SET @tablename = 'USR_LOOKUP_SAVED_COA';
SET @newcol = 'POM_YEAR';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol;
SET @sql := IF(@updated = 1,'SELECT "Table already updated";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"ADD COLUMN `POM_YEAR` YEAR NOT NULL DEFAULT 2026 AFTER `STORM_FLAG`",", ADD COLUMN `YEAR_LIST` JSON NOT NULL AFTER `POM_YEAR`;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

UPDATE USR_LOOKUP_SAVED_COA  SET POM_YEAR  = 2027 WHERE TYPE_OF_COA = 'ISS_EXTRACT';

UPDATE USR_LOOKUP_SAVED_COA SET  YEAR_LIST = "[2026,2027,2028,2029,2030]" WHERE TYPE_OF_COA != 'ISS_EXTRACT';

UPDATE USR_LOOKUP_SAVED_COA SET  YEAR_LIST = "[2027,2028,2029,2030,2031]" WHERE TYPE_OF_COA = 'ISS_EXTRACT';

SET @dbname = DATABASE();
SET @tablename = 'USR_LOOKUP_SAVED_COA';
SET @newcol = 'CYCLE_ID';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol;
SET @sql := IF(@updated = 1,'SELECT "Table already updated";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"ADD COLUMN `CYCLE_ID` INT NOT NULL DEFAULT 1 AFTER `CRITERIA_NAME_ID`"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

UPDATE USR_LOOKUP_SAVED_COA SET CYCLE_ID = (SELECT CYCLE_ID FROM USR_LOOKUP_USER_CRITERIA_NAME WHERE ID = CRITERIA_NAME_ID);


SET @dbname = DATABASE();
SET @tablename = 'USR_ZBT_AO_SAVES_HISTORY';
SET @newcol = 'AO_RECOMENDATION';
SET @newtype = 'VARCHAR(100)';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol AND COLUMN_TYPE=@newtype;
SET @sql := IF(@updated = 1,'SELECT "Table already updated (CHANGE COLUMN `AO_RECOMENDATION` `AO_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL)";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"CHANGE COLUMN `AO_RECOMENDATION` `AO_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @dbname = DATABASE();
SET @tablename = 'USR_ZBT_AD_SAVES_HISTORY';
SET @newcol = 'AD_RECOMENDATION';
SET @newtype = 'VARCHAR(100)';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol AND COLUMN_TYPE=@newtype;
SET @sql := IF(@updated = 1,'SELECT "Table already updated (CHANGE COLUMN `AD_RECOMENDATION` `AD_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;)";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"CHANGE COLUMN `AD_RECOMENDATION` `AD_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @dbname = DATABASE();
SET @tablename = 'USR_ISSUE_AO_SAVES_HISTORY';
SET @newcol = 'AO_RECOMENDATION';
SET @newtype = 'VARCHAR(100)';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol AND COLUMN_TYPE=@newtype;
SET @sql := IF(@updated = 1,'SELECT "Table already updated (CHANGE COLUMN `AO_RECOMENDATION` `AO_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;)";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"CHANGE COLUMN `AO_RECOMENDATION` `AO_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @dbname = DATABASE();
SET @tablename = 'USR_ISSUE_AD_SAVES_HISTORY';
SET @newcol = 'AD_RECOMENDATION';
SET @newtype = 'VARCHAR(100)';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol AND COLUMN_TYPE=@newtype;
SET @sql := IF(@updated = 1,'SELECT "Table already updated (CHANGE COLUMN `AD_RECOMENDATION` `AD_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;)";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ',"CHANGE COLUMN `AD_RECOMENDATION` `AD_RECOMENDATION` VARCHAR(100) NULL DEFAULT NULL;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

SET @dbname = DATABASE();
SET @tablename = 'USR_LOOKUP_SAVED_COA';
SET @newcol = 'POM_ID';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol;
SET @sql := IF(@updated = 1,'SELECT "Table already updated";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ', 'ADD COLUMN `POM_ID` INT NOT NULL DEFAULT 1 AFTER `YEAR_LIST`,',  " ADD COLUMN `POSITION` VARCHAR(30) NOT NULL DEFAULT 'ZBT' AFTER `POM_ID`;"));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;

CREATE TABLE IF NOT EXISTS `USR_ISSUE_AD_FINAL_SAVES` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `AD_RECOMENDATION` enum('Approve','Approve at scale','Disapprove') DEFAULT NULL,
  `AD_USER_ID` int DEFAULT NULL,
  `CREATED_DATETIME` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `UPDATED_DATETIME` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `EVENT_NAME` varchar(100) DEFAULT NULL,
  `POM_ID` int NOT NULL DEFAULT '1',
  `IS_DELETED` tinyint(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `idx_program_id_eoc_code` (`EVENT_NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

DROP TABLE IF EXISTS USR_ISSUE_AD_FINAL_SAVES_HISTORY;

DROP TABLE IF EXISTS USR_ZBT_AD_FINAL_SAVES;

DROP TABLE IF EXISTS USR_ZBT_AD_FINAL_SAVES_HISTORY;

CREATE TABLE IF NOT EXISTS USR_EVENT_FUNDING_LINES (
    ID INT AUTO_INCREMENT NOT NULL,
    EVENT_NAME VARCHAR(100),
    CYCLE_ID INT NOT NULL,
    CRITERIA_NAME_ID INT NOT NULL,
    POM_ID INT NOT NULL,
    POM_POSITION VARCHAR(30) NOT NULL,
    FY_1 INT NOT NULL DEFAULT 0,
    FY_2 INT NOT NULL DEFAULT 0,
    FY_3 INT NOT NULL DEFAULT 0,
    FY_4 INT NOT NULL DEFAULT 0,
    FY_5 INT NOT NULL DEFAULT 0,
    APPROVE_TABLE JSON DEFAULT NULL,
    YEAR_LIST JSON NOT NULL,
    USER_ID INT NOT NULL,
    UPDATE_USER_ID INT NOT NULL,
    CREATED_DATETIME DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_DATETIME DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    APP_VERSION VARCHAR(45),
    PRIMARY KEY (ID),
    KEY(EVENT_NAME),
    KEY(POM_ID)
);

SET @dbname = DATABASE();
SET @tablename = 'USR_LOOKUP_SAVED_COA';
SET @newcol = 'CALC_BUDGET_VALUES';
SELECT count(*) INTO @updated FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = @dbname and TABLE_NAME=@tablename and COLUMN_NAME=@newcol;
SET @sql := IF(@updated = 1,'SELECT "CALC_BUDGET_VALUES already updated";',CONCAT('ALTER TABLE ', @dbname, '.', @tablename, ' ', 'ADD COLUMN `CALC_BUDGET_VALUES` JSON NULL DEFAULT NULL AFTER `COA_VALUES`;'));
PREPARE stmt FROM @sql;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;