-- SOCOM Database Setup Script
-- This script creates the required database and tables for the SOCOM system

-- Create the SOCOM_UI database if it doesn't exist
CREATE DATABASE IF NOT EXISTS SOCOM_UI;
USE SOCOM_UI;

-- Create ZBT Summary tables for different years
CREATE TABLE IF NOT EXISTS ZBT_SUMMARY_2024 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2024,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

CREATE TABLE IF NOT EXISTS ZBT_SUMMARY_2025 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2025,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

-- Create Issue Summary tables for different years
CREATE TABLE IF NOT EXISTS ISS_SUMMARY_2024 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2024,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

CREATE TABLE IF NOT EXISTS ISS_SUMMARY_2025 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2025,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

-- Create POM Summary tables
CREATE TABLE IF NOT EXISTS POM_SUMMARY_2024 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2024,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

CREATE TABLE IF NOT EXISTS POM_SUMMARY_2025 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2025,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

-- Create Resource Constrained COA tables
CREATE TABLE IF NOT EXISTS RESOURCE_CONSTRAINED_COA_2024 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(100) NOT NULL,
    POM_SPONSOR_CODE VARCHAR(100),
    EVENT_NAME VARCHAR(255),
    POM_CYCLE_OPTIMIZATION_TYPE ENUM('Issue Optimization', 'Resource Constraining') DEFAULT 'Resource Constraining',
    ASSESSMENT_AREA_CODE VARCHAR(50),
    DELTA_AMT DECIMAL(15,2),
    RESOURCE_K DECIMAL(15,2),
    WEIGHTED_SCORE DECIMAL(10,2),
    STORM_SCORE DECIMAL(10,2),
    FISCAL_YEAR INT,
    PROGRAM_NAME VARCHAR(255),
    PROGRAM_GROUP VARCHAR(100),
    RESOURCE_CATEGORY_CODE VARCHAR(50),
    EXECUTION_MANAGER_CODE VARCHAR(50),
    PROGRAM_CODE VARCHAR(50),
    EOC_CODE VARCHAR(50),
    OSD_PE_CODE VARCHAR(50),
    OSD_PROGRAM_ELEMENT_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME),
    INDEX idx_program_code (PROGRAM_CODE),
    INDEX idx_assessment_area (ASSESSMENT_AREA_CODE),
    INDEX idx_resource_category (RESOURCE_CATEGORY_CODE)
);

CREATE TABLE IF NOT EXISTS RESOURCE_CONSTRAINED_COA_2025 (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CAPABILITY_SPONSOR_CODE VARCHAR(255) NOT NULL,
    EVENT_NAME VARCHAR(500) NOT NULL,
    DELTA_AMT DECIMAL(15,2) DEFAULT 0.00,
    FISCAL_YEAR INT DEFAULT 2025,
    PROGRAM_NAME VARCHAR(500),
    RESOURCE_CATEGORY_CODE VARCHAR(100),
    EXECUTION_MANAGER_CODE VARCHAR(100),
    PROGRAM_CODE VARCHAR(100),
    EOC_CODE VARCHAR(100),
    OSD_PE_CODE VARCHAR(100),
    APPROVAL_STATUS VARCHAR(50) DEFAULT 'PENDING',
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_capability_sponsor (CAPABILITY_SPONSOR_CODE),
    INDEX idx_event_name (EVENT_NAME),
    INDEX idx_fiscal_year (FISCAL_YEAR),
    INDEX idx_program_name (PROGRAM_NAME)
);

-- Insert sample data for testing
INSERT INTO ZBT_SUMMARY_2025 (CAPABILITY_SPONSOR_CODE, EVENT_NAME, DELTA_AMT, PROGRAM_NAME, RESOURCE_CATEGORY_CODE) VALUES
('SORDAC', 'SOF AT&L ZBT Event 1', 1000000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('SORDAC', 'SOF AT&L ZBT Event 2', 2500000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('USSOCOM', 'USSOCOM ZBT Event 1', 1500000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('USSOCOM', 'USSOCOM ZBT Event 2', 3000000.00, 'Special Operations Program', 'RESEARCH_DEV');

INSERT INTO ISS_SUMMARY_2025 (CAPABILITY_SPONSOR_CODE, EVENT_NAME, DELTA_AMT, PROGRAM_NAME, RESOURCE_CATEGORY_CODE) VALUES
('SORDAC', 'SOF AT&L Issue Event 1', 500000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('SORDAC', 'SOF AT&L Issue Event 2', 750000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('USSOCOM', 'USSOCOM Issue Event 1', 600000.00, 'Special Operations Program', 'RESEARCH_DEV'),
('USSOCOM', 'USSOCOM Issue Event 2', 900000.00, 'Special Operations Program', 'RESEARCH_DEV');

-- Create lookup tables for reference data
CREATE TABLE IF NOT EXISTS LOOKUP_SPONSOR (
    id INT AUTO_INCREMENT PRIMARY KEY,
    SPONSOR_CODE VARCHAR(100) UNIQUE NOT NULL,
    SPONSOR_TITLE VARCHAR(255) NOT NULL,
    SPONSOR_TYPE ENUM('CAPABILITY', 'POM') NOT NULL,
    ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_sponsor_code (SPONSOR_CODE),
    INDEX idx_sponsor_type (SPONSOR_TYPE)
);

CREATE TABLE IF NOT EXISTS LOOKUP_ASSESSMENT_AREA (
    id INT AUTO_INCREMENT PRIMARY KEY,
    ASSESSMENT_AREA_CODE VARCHAR(100) UNIQUE NOT NULL,
    ASSESSMENT_AREA VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_assessment_area_code (ASSESSMENT_AREA_CODE)
);

CREATE TABLE IF NOT EXISTS LOOKUP_RESOURCE_CATEGORY (
    id INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORY_CODE VARCHAR(100) UNIQUE NOT NULL,
    CATEGORY_NAME VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT,
    ACTIVE BOOLEAN DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_category_code (CATEGORY_CODE)
);

-- Insert sample lookup data
INSERT INTO LOOKUP_SPONSOR (SPONSOR_CODE, SPONSOR_TITLE, SPONSOR_TYPE) VALUES
('SORDAC', 'SOF AT&L', 'CAPABILITY'),
('USSOCOM', 'USSOCOM', 'CAPABILITY'),
('JSOC', 'Joint Special Operations Command', 'CAPABILITY'),
('AFSOC', 'Air Force Special Operations Command', 'CAPABILITY'),
('NSW', 'Naval Special Warfare', 'CAPABILITY'),
('USASOC', 'US Army Special Operations Command', 'CAPABILITY'),
('MARSOC', 'Marine Corps Special Operations Command', 'CAPABILITY'),
('NAVSPECWARCOM', 'Naval Special Warfare Command', 'CAPABILITY'),
('SOCAF', 'Special Operations Command Africa', 'CAPABILITY'),
('SOCEUR', 'Special Operations Command Europe', 'CAPABILITY'),
('SOCPAC', 'Special Operations Command Pacific', 'CAPABILITY'),
('SOCSOUTH', 'Special Operations Command South', 'CAPABILITY'),
('SOCNORTH', 'Special Operations Command North', 'CAPABILITY'),
('SOCENT', 'Special Operations Command Central', 'CAPABILITY'),
('SOF_ATL', 'SOF AT&L', 'POM'),
('USSOCOM_POM', 'USSOCOM POM', 'POM'),
('ARMY_POM', 'Army POM', 'POM'),
('NAVY_POM', 'Navy POM', 'POM'),
('AIR_FORCE_POM', 'Air Force POM', 'POM'),
('MARINE_POM', 'Marine Corps POM', 'POM');

INSERT INTO LOOKUP_ASSESSMENT_AREA (ASSESSMENT_AREA_CODE, ASSESSMENT_AREA, DESCRIPTION) VALUES
('RESEARCH_DEV', 'Research & Development', 'Research and Development activities'),
('ACQUISITION', 'Acquisition', 'Acquisition and procurement activities'),
('OPERATIONS', 'Operations', 'Operational activities'),
('MAINTENANCE', 'Maintenance', 'Maintenance and sustainment activities');

INSERT INTO LOOKUP_RESOURCE_CATEGORY (CATEGORY_CODE, CATEGORY_NAME, DESCRIPTION) VALUES
('RESEARCH_DEV', 'Research & Development', 'Research and Development activities'),
('ACQUISITION', 'Acquisition', 'Acquisition and procurement activities'),
('OPERATIONS', 'Operations', 'Operational activities'),
('MAINTENANCE', 'Maintenance', 'Maintenance and sustainment activities');

-- Create DT_BUDGET_EXECUTION table with proper constraints
CREATE TABLE IF NOT EXISTS DT_BUDGET_EXECUTION (
    PK_DUMMY INT AUTO_INCREMENT PRIMARY KEY,
    ASSESSMENT_AREA_CODE VARCHAR(50) COLLATE utf8mb4_0900_ai_ci,
    CAPABILITY_SPONSOR_CODE VARCHAR(100) COLLATE utf8mb4_0900_ai_ci,
    EOC_CODE VARCHAR(15),
    EXECUTION_MANAGER_CODE VARCHAR(13),
    FISCAL_YEAR SMALLINT,
    OSD_PROGRAM_ELEMENT_CODE VARCHAR(10),
    PROGRAM_CODE VARCHAR(11),
    PROGRAM_GROUP VARCHAR(13),
    RESOURCE_CATEGORY_CODE VARCHAR(8),
    SUM_ACTUALS INT,
    SUM_ENT INT,
    SUM_PB INT,
    FOREIGN KEY (CAPABILITY_SPONSOR_CODE) REFERENCES LOOKUP_SPONSOR(SPONSOR_CODE),
    FOREIGN KEY (ASSESSMENT_AREA_CODE) REFERENCES LOOKUP_ASSESSMENT_AREA(ASSESSMENT_AREA_CODE)
);

-- Insert additional program data to support foreign key constraints
INSERT INTO LOOKUP_PROGRAM (PROGRAM_CODE, PROGRAM_NAME, PROGRAM_DESCRIPTION) VALUES
('PROG001', 'Program 001', 'Special Operations Program 001'),
('PROG002', 'Program 002', 'Special Operations Program 002'),
('PROG003', 'Program 003', 'Air Force Special Operations Program'),
('PROG004', 'Program 004', 'Naval Special Warfare Program'),
('PROG005', 'Program 005', 'Special Operations Program 005'),
('PROG006', 'Program 006', 'Special Operations Program 006'),
('PROG007', 'Program 007', 'Special Operations Program 007'),
('PROG008', 'Program 008', 'Special Operations Program 008');

-- Create DT_PB_COMPARISON table with proper constraints
CREATE TABLE IF NOT EXISTS DT_PB_COMPARISON (
    FISCAL_YEAR INT,
    CAPABILITY_SPONSOR_CODE VARCHAR(50) COLLATE utf8mb4_0900_ai_ci,
    ASSESSMENT_AREA_CODE VARCHAR(50) COLLATE utf8mb4_0900_ai_ci,
    PROGRAM_GROUP VARCHAR(100),
    RESOURCE_CATEGORY_CODE VARCHAR(50) COLLATE utf8mb4_0900_ai_ci,
    EXECUTION_MANAGER_CODE VARCHAR(50),
    PROGRAM_CODE VARCHAR(50) COLLATE utf8mb4_0900_ai_ci,
    EOC_CODE VARCHAR(50),
    OSD_PROGRAM_ELEMENT_CODE VARCHAR(50),
    PB24 DECIMAL(15,2),
    PB25 DECIMAL(15,2),
    PB26 DECIMAL(15,2),
    PB27 DECIMAL(15,2),
    PB28 DECIMAL(15,2),
    PB29 DECIMAL(15,2),
    PB30 DECIMAL(15,2),
    FOREIGN KEY (CAPABILITY_SPONSOR_CODE) REFERENCES LOOKUP_SPONSOR(SPONSOR_CODE),
    FOREIGN KEY (ASSESSMENT_AREA_CODE) REFERENCES LOOKUP_ASSESSMENT_AREA(ASSESSMENT_AREA_CODE),
    FOREIGN KEY (RESOURCE_CATEGORY_CODE) REFERENCES LOOKUP_RESOURCE_CATEGORY(CATEGORY_CODE),
    FOREIGN KEY (PROGRAM_CODE) REFERENCES LOOKUP_PROGRAM(PROGRAM_CODE)
);

-- Insert sample data for DT_BUDGET_EXECUTION
INSERT INTO DT_BUDGET_EXECUTION (CAPABILITY_SPONSOR_CODE, ASSESSMENT_AREA_CODE, PROGRAM_GROUP, FISCAL_YEAR, SUM_ACTUALS, SUM_ENT, SUM_PB) VALUES
('SORDAC', 'ACQUISITION', 'PROG_GROUP_1', 2024, 1000000, 1100000, 1200000),
('USSOCOM', 'ACQUISITION', 'PROG_GROUP_2', 2024, 2000000, 2200000, 2400000),
('SORDAC', 'MAINTENANCE', 'PROG_GROUP_1', 2025, 1500000, 1650000, 1800000),
('USSOCOM', 'MAINTENANCE', 'PROG_GROUP_2', 2024, 2500000, 2750000, 3000000);

-- Verify the tables were created
SHOW TABLES;

-- Show sample data
SELECT 'ZBT_SUMMARY_2025' as table_name, COUNT(*) as record_count FROM ZBT_SUMMARY_2025
UNION ALL
SELECT 'ISS_SUMMARY_2025' as table_name, COUNT(*) as record_count FROM ISS_SUMMARY_2025
UNION ALL
SELECT 'LOOKUP_SPONSOR' as table_name, COUNT(*) as record_count FROM LOOKUP_SPONSOR
UNION ALL
SELECT 'LOOKUP_ASSESSMENT_AREA' as table_name, COUNT(*) as record_count FROM LOOKUP_ASSESSMENT_AREA
UNION ALL
SELECT 'LOOKUP_PROGRAM' as table_name, COUNT(*) as record_count FROM LOOKUP_PROGRAM
UNION ALL
SELECT 'DT_BUDGET_EXECUTION' as table_name, COUNT(*) as record_count FROM DT_BUDGET_EXECUTION
UNION ALL
SELECT 'DT_PB_COMPARISON' as table_name, COUNT(*) as record_count FROM DT_PB_COMPARISON;

-- Create USR_DT_SCHEDULER table
CREATE TABLE IF NOT EXISTS `USR_DT_SCHEDULER` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `CYCLE_ID` int NOT NULL,
  `TYPE` enum('PROGRAM_SCORE_UPLOAD') NOT NULL DEFAULT 'PROGRAM_SCORE_UPLOAD',
  `CRON_STATUS` tinyint(1) NOT NULL DEFAULT '0',
  `CRON_PROCESSED` tinyint(1) NOT NULL DEFAULT '0',
  `ERRORS` VARCHAR(5000) NULL DEFAULT NULL,
  `USER_ID` int NOT NULL,
  `CREATED_TIMESTAMP` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  KEY `idx_add_datetime` (`CREATED_TIMESTAMP`),
  KEY `idx_archive_fy` (`CRON_STATUS`,`TYPE`,`CREATED_TIMESTAMP`),
  KEY `idx_cron_status_type` (`CRON_STATUS`, `TYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

-- Create USR_DT_SCHEDULER_MAP table
CREATE TABLE IF NOT EXISTS `USR_DT_SCHEDULER_MAP` (
  `ID` int NOT NULL AUTO_INCREMENT,
  `TYPE` enum('PROGRAM_SCORE_UPLOAD') NOT NULL DEFAULT 'PROGRAM_SCORE_UPLOAD',
  `DT_SCHEDULER_ID` int NOT NULL,
  `MAP_ID` int NOT NULL,
  `CREATED_TIMESTAMP` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`ID`),
  KEY `idx_add_datetime` (`CREATED_TIMESTAMP`),
  KEY `idx_archive_fy` (`TYPE`,`CREATED_TIMESTAMP`),
  KEY `idx_type_cron_status_fiscal_year` (`TYPE`),
  KEY `idx_dt_scheduler_id` (`DT_SCHEDULER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
